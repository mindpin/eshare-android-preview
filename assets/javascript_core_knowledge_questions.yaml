- javascript_core_knowledge_questions
- - knowledge_node_id: "node-31"
    kind: fill
    content: |
      ```ruby
        var txt = "a,b,c,d,e";
        var arr = txt.split( [%] );
        alert(arr.length == 5)
      ```
      上面的代码运行结果如下
      ![file:///android_asset/questions/node_31/14.jpg]
      请用下面的选项补全代码
    choices:
      - "\"\""
      - "\" \" "
      - "\",\""
      - "\"|\""
    answer: "\",\""

  - knowledge_node_id: "node-31"
    kind: fill
    content: |
      ```ruby
        var x = "John";
        var y = new String("John");
        typeof(x) == [%] // return true
        typeof(y) == [%] // return true
      ```
      请补全代码，让两个等式成立
    choices:
      - object
      - string
      - object
      - string
    answer: string,object

  - knowledge_node_id: "node-31"
    kind: single_choice
    content: |
      ```ruby
      var carname = "Volvo XC60";
      var character = carname[7];
      alert(character)
      ```
      上面代码的运行结果，下面哪个是正确的
    choices:
      - "![file:///android_asset/questions/node_31/1.jpg]"
      - "![file:///android_asset/questions/node_31/2.jpg]"
      - "![file:///android_asset/questions/node_31/3.jpg]"
    answer: A

  - knowledge_node_id: "node-31"
    kind: single_choice
    content: |
      ```ruby
        var txt = "Hello World!";
        var count = txt.length;
      ```
      上面的代码中，count 的值是
    choices:
      - 10
      - 11
      - 12
      - 13
    answer: C

  - knowledge_node_id: "node-31"
    kind: single_choice
    content: |
      ```ruby
      var str = "Hello world, welcome to the universe.";
      var n = str.indexOf("welcome");
      ```
      上面的代码中，n 的值是
    choices:
      - 10
      - 11
      - 12
      - 13
    answer: D

  - knowledge_node_id: "node-31"
    kind: single_choice
    content: |
      ```ruby
      var str = "Hello world!";
      alert(str.match("world"));
      ```
      上面代码的运行结果，下面哪个是正确的
    choices:
      - "![file:///android_asset/questions/node_31/5.jpg]"
      - "![file:///android_asset/questions/node_31/6.jpg]"
      - "![file:///android_asset/questions/node_31/7.jpg]"
      - "![file:///android_asset/questions/node_31/8.jpg]"
    answer: A

  - knowledge_node_id: "node-31"
    kind: single_choice
    content: |
      ```ruby
        var str = "Please visit A!"
        var n = str.replace("A","B");
        alert(n)
      ```
      上面代码的运行结果，下面哪个是正确的
    choices:
      - "![file:///android_asset/questions/node_31/9.jpg]"
      - "![file:///android_asset/questions/node_31/10.jpg]"
      - "![file:///android_asset/questions/node_31/11.jpg]"
      - "![file:///android_asset/questions/node_31/12.jpg]"
    answer: A

  - knowledge_node_id: "node-31"
    kind: multiple_choices
    content: |
      ![file:///android_asset/questions/node_31/4.jpg]
      如图，下面哪些代码的运行结果和图片一样
    choices:
      - |
        ```ruby
          alert("He is called 'Johnny'")
        ```
      - |
        ```ruby
          alert('He is called \'Johnny\'')
        ```
      - |
        ```ruby
          alert('He is called "Johnny"')
        ```
      - |
        ```ruby
          alert("He is called \"Johnny\"")
        ```
    answer: AB

  - knowledge_node_id: "node-31"
    kind: multiple_choices
    content: |
      ![file:///android_asset/questions/node_31/13.jpg]
      如图，下面哪个代码的运行结果和图片一样
    choices:
      - |
        ```ruby
        var txt="Hello World!";
        alert(txt.toUpperCase());
        ```
      - |
        ```ruby
        var txt="Hello World!";
        alert(txt.toLowerCase());
        ```
      - |
        ```ruby
        alert("HELLO WORLD!");
        ```
    answer: AC

  - knowledge_node_id: "node-31"
    kind: true_false
    content: JavaScript 中的字符串采用UTF-16编码的Unicode字符集
    answer: T

  - knowledge_node_id: "node-31"
    kind: true_false
    content: JavaScript 中的字符串是一组由16位值组成的不可变的有序序列
    answer: T

  - knowledge_node_id: "node-31"
    kind: true_false
    content: JavaScript 中的字符串直接量，是由单引号或双引号括起来的字符序列
    answer: T

  - knowledge_node_id: n69
    kind: fill
    content: |
        ```ruby
            [%](a > 3) {
                [%]("hello")
            }
        ```
    choices:
      - alert
      - if
      - when
      - confirm
      - else
      - of
    answer: if,alert

  - knowledge_node_id: n0
    kind: true_false
    content: 字符 é 的 unicode 转义写法为 \u00E9，那这两个字符串 "café" === "caf\u00e9" 的比较结果是
    answer: T

  - knowledge_node_id: n1
    kind: single_choice
    content: 以下哪一个是正确的单行注释写法？
    choices:
      - "// 注释"
      - "/ 注释"
      - "/* 注释"
    answer: A

  - knowledge_node_id: n2
    kind: single_choice
    content: 以下哪一个是正确的多行注释写法？
    choices:
      - |
        / 注释
        *  注释连写多行
        /

      - |
        /* 注释
        *  注释连写多行
        */

    answer: B

  - knowledge_node_id: n3
    kind: multiple_choices
    content: 选择正确变量
    choices:
      - "$sí"
      - "4$abc"
      - "é$str"
    answer: AC

  - knowledge_node_id: n4
    kind: multiple_choices
    content: 下列哪些是保留字
    choices:
      - "if"
      - "else"
      - "break"
      - "do"
    answer: ABCD

  - knowledge_node_id: n5
    kind: true_false
    content: 在 javascript 代码中，每行结尾必须有分号
    answer: F

  - knowledge_node_id: n6
    kind: single_choice
    content: 哪个才是对象直接量
    choices:
      - "12"
      - "\"hi\""
      - "null"
      - "{x:1}"
    answer: D

  - knowledge_node_id: n13
    kind: multiple_choices
    content: 下面哪些是正确的整数
    choices:
      - "1"
      - "0x1"
      - "0a"
      - "0xa"
    answer: ABD

  - knowledge_node_id: n14
    kind: true_false
    content: 在javascript中所有数值均用浮点数表示
    answer: T

  - knowledge_node_id: n15
    kind: true_false
    content: 在javascript中字符串既可以使用单引号，也可以使用双引号
    answer: T

  - knowledge_node_id: n16
    kind: single_choice
    content: 选择正确的转义字符
    choices:
      - "\\n"
      - "/n"
    answer: A

  - knowledge_node_id: n17
    kind: multiple_choices
    content: 下面哪些布尔值是 true
    choices:
      - "!1"
      - "!0"
      - "!null"
      - "!undefined"
    answer: BCD

  - knowledge_node_id: n18
    kind: true_false
    content: typeof null 的结果是 object
    answer: T

  - knowledge_node_id: n19
    kind: true_false
    content: typeof undefined 的结果是 object
    answer: F

  - knowledge_node_id: n22
    kind: single_choice
    content: 在浏览器javascript中，表示整个窗口的对象是
    choices:
      - Math
      - RegExp
      - Date
      - Window
    answer: D

  - knowledge_node_id: n23
    kind: multiple_choices
    content: 有一个变量 var o = {a:1}，下面哪些可以正确访问a属性
    choices:
      - o.a
      - o.a()
      - o[a]
      - o["a"]
    answer: AD

  - knowledge_node_id: n24
    kind: multiple_choices
    content: 下面哪些是全局属性
    choices:
      - Math
      - undinded
      - NaN
      - JSON
      - Infinity
    answer: BCE

  - knowledge_node_id: n25
    kind: multiple_choices
    content: 下面哪些是全局函数
    choices:
      - open()
      - new()
      - isNaN()
      - parseInt()
      - eval()
    answer: CDE

  - knowledge_node_id: n26
    kind: multiple_choices
    content: 下面哪些是全局构造函数
    choices:
      - Date()
      - System()
      - Stack()
      - Date()
      - RegExp()
      - String()
      - Object()
    answer: ADEFG

  - knowledge_node_id: n28
    kind: true_false
    content: javascript中变量声明前必须加 var
    answer: F

  - knowledge_node_id: n29
    kind: true_false
    content: 在函数体内，局部变量的优先级高于同名的全局变量
    answer: T

  - knowledge_node_id: n30
    kind: single_choice
    content: 关于表达式和语句的区别, 下列表述正确的是
    choices:
      - 语句需要用花括号括起来, 而表达式不需要;
      - 表达式求值结果是一个值而语句对求值结果是否有值没有要求;
      - 没有区别, 他们可以归属到同一个概念;
      - 只要是定义和赋值的都是表达式, 其他都是语句.
    answer: B

  - knowledge_node_id: n33
    kind: true_false
    content: 1 + "2" === 3
    answer: F

  - knowledge_node_id: n34
    kind: single_choice
    content: 关于 == 和 === 运算符， 下列表叔正确的是
    choices:
      - 0 == false
      - 1 === "1"
      - 两个运算符作用完全一样
      - false == NaN
    answer: A

  - knowledge_node_id: n35
    kind: true_false
    content: 1 || 0 的求值结果是1
    answer: T

  - knowledge_node_id: n36
    kind: true_false
    content: var a = 2; a += 1后a值为2
    answer: F

  - knowledge_node_id: n37
    kind: single_choice
    content: 下面哪种写法是正确的
    choices:
      - x > 0 ? x : 0
      - x > 0 : x ? 0
    answer: A

  - knowledge_node_id: n39
    kind: multiple_choices
    content: 下面哪种写法是正确的
    choices:
      - typeof null == "null"
      - typeof null == "object"
      - typeof undefined == "undefined"
      - typeof undefined == "object"
    answer: BC

  - knowledge_node_id: n40
    kind: multiple_choices
    content: 下面哪些是正确的
    choices:
      - 如果定义了一个变量 var o = {a:1}, delete o 可以删除 o 这个变量
      - 如果定义了一个变量 var o = {a:1}, delete o.a 可以删除 a 这个属性
      - 如果定义了一个变量 var o = ["a","b"], delete o[0] 可以删除 "a" 这个元素
    answer:  BC

  - knowledge_node_id: n41
    kind: single_choice
    content: 下面哪个是正确的
    choices:
      - void(1+1) === 2
      - void(1+1) === undefined
    answer: B


  - knowledge_node_id: n44
    kind: single_choice
    content: 想要跳出一个循环体或者switch语句时，需要用到
    choices:
      - break
      - continue
      - return
      - throw
    answer: A

- knowledge_node_id: n47
  kind: multiple_choices
  content: 下面哪些写法是正确的
  choices:
    - "var book = {'main title': 'javascript'}"
    - "var book = {maintitle : 'javascript'}"
    - "var book = {main_title : 'javascript'}"
    - "var book = {main-title : 'javascript'}"
  answer: ABC

- knowledge_node_id: n49
  kind: multiple_choices
  content: "对象 o = {x: 1} 下面哪些返回结果为 true"
  choices:
    - delete o.x;
    - delete o.toString;
    - delete 1;
    - delete o;
  answer: ABC

- knowledge_node_id: n50
  kind: multiple_choices
  content: "对象 o = {x: 1} 下面哪些返回结果为 true"
  choices:
    - "o.hasOwnProperty('x')"
    - "o.hasOwnProperty('toString')"
    - "o.x !== undefined"
    - "o.toString !== undefined"
  answer: ACD



- knowledge_node_id: n52
  kind: multiple_choices
  content: 对象 o = {a:1},哪些用法可以得到属性a的值
  choices:
    - o[a]
    - o["a"]
    - o.a
  answer: BC

- knowledge_node_id: n53
  kind: multiple_choices
  content: 对象 o = {a:1},哪些用法可以修改属性a的值
  choices:
    - o[a] = 2
    - o["a"] = 2
    - o.a = 2
  answer: BC

- knowledge_node_id: n55
  kind: single_choice
  content: 对象 o = {get a(){return 1}},下面哪个是正确的
  choices:
    - o.a() === 1
    - o.a === 1
  answer: B

- knowledge_node_id: n56
  kind: single_choice
  content: 对象 o = {set a(i){this.b = i}},运行下面那句代码可以使 o.b = 1
  choices:
    - o.a(1)
    - o.a = 1
  answer: B



- knowledge_node_id: n58
  kind: single_choice
  content: 哪个方法是序列化一个对象
  choices:
    - JSON.stringify(o)
    - JSON.parse(o)
  answer: A

- knowledge_node_id: n60
  kind: multiple_choices
  content: 哪些是从 Object.prototype 继承而来的方法
  choices:
    - toString
    - valueOf
    - hasOwnProperty
    - trim
  answer: ABC

- knowledge_node_id: n62
  kind: multiple_choices
  content: 下面哪些是正确的
  choices:
    - "var arr = [1.1,true,'a',]"
    - "var arr = {1.1,true,'a',}"
    - "var arr = [1,{x:1,y:2},[2,{x:3,y:4}]"
    - "var arr = new Array(10)"
  answer: ACD

- knowledge_node_id: n63
  kind: single_choice
  content: 数组 arr = [1,2],如何获取 arr 的数组长度
  choices:
    - arr.length
    - arr.length()
  answer: A

- knowledge_node_id: n64
  kind: single_choice
  content: |
    var a = ['world'];
    a[1] = 3.14;
    i = 2;
    a[i] = 3;
    a[i+1] = 'hello';
    a[a[i]] = a[0];
    根据上面确定 a[0],a[1],a[2],a[3] 的值
  choices:
    - a[0] = 'world',a[1] = 3.14, a[2] = 'hello', a[3] = 3
    - a[0] = 'world',a[1] = 'hello', a[2] = 3.14, a[3] = 3
    - a[0] = 'world',a[1] = 3.14, a[2] = 3, a[3] = 'hello'
    - a[0] = 'world',a[1] = 3, a[2] = 'hello', a[3] = 3.14
  answer: C

- knowledge_node_id: n65
  kind: multiple_choices
  content: a=[1，3，5] 对a数组的操作正确的是
  choices:
    - a[0] = 'zero'
    - a.keys.length
    - a.push('zero','two')
    - remove a[1]
    - delete a[1]
  answer: ACE



- knowledge_node_id: n67
  kind: single_choice
  content: 数组 arr = ["a",["b","c","d"]],如何可以取到 "d"
  choices:
    - arr[1][2]
    - arr[2][3]
    - arr[2][1]
    - arr[3][2]
  answer: A

- knowledge_node_id: n68
  kind: multiple_choices
  content: 下面正确的是
  choices:
    - "[1,2,3].join(',') === '1,2,3'"
    - "[1,2,3].reverse().join(',') === '3,2,1'"
    - "[1,2,3,4,5].slice(1,3).join(',') === '2,3'"
    - "arr = [1];arr.push(2);arr.join(',') === '1,2'"
    - "arr = [1];arr.unshift(2);arr.join(',') === '1,2'"
  answer: ABCD
